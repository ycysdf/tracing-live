//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "tracing_span_enter")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub span_run_id: Uuid,
    pub enter_time: DateTimeWithTimeZone,
    #[sea_orm(column_type = "Double", nullable)]
    pub duration: Option<f64>,
    pub record_id: i64,
    pub leave_record_id: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tracing_span_run::Entity",
        from = "Column::SpanRunId",
        to = "super::tracing_span_run::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TracingSpanRun,
}

impl Related<super::tracing_span_run::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TracingSpanRun.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
