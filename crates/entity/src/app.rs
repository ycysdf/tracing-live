//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "app")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub creation_time: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::app_build::Entity")]
    AppBuild,
}

impl Related<super::app_build::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AppBuild.def()
    }
}

impl Related<super::app_run::Entity> for Entity {
    fn to() -> RelationDef {
        super::app_build::Relation::AppRun.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::app_build::Relation::App.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
