/* tslint:disable */
/* eslint-disable */
/**
 * tracing-lv-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AppRunDto
 */
export interface AppRunDto {
    /**
     * 
     * @type {string}
     * @memberof AppRunDto
     */
    appId: string;
    /**
     * 
     * @type {string}
     * @memberof AppRunDto
     */
    appVersion: string;
    /**
     * 
     * @type {Date}
     * @memberof AppRunDto
     */
    creationTime: Date;
    /**
     * 
     * @type {object}
     * @memberof AppRunDto
     */
    data: object;
    /**
     * 
     * @type {boolean}
     * @memberof AppRunDto
     */
    exceptionEnd: boolean;
    /**
     * 
     * @type {string}
     * @memberof AppRunDto
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof AppRunDto
     */
    recordId: number;
    /**
     * 
     * @type {number}
     * @memberof AppRunDto
     */
    runElapsed?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof AppRunDto
     */
    startTime: Date;
    /**
     * 
     * @type {number}
     * @memberof AppRunDto
     */
    stopRecordId?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof AppRunDto
     */
    stopTime?: Date | null;
}

/**
 * Check if a given object implements the AppRunDto interface.
 */
export function instanceOfAppRunDto(value: object): value is AppRunDto {
    if (!('appId' in value) || value['appId'] === undefined) return false;
    if (!('appVersion' in value) || value['appVersion'] === undefined) return false;
    if (!('creationTime' in value) || value['creationTime'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('exceptionEnd' in value) || value['exceptionEnd'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('recordId' in value) || value['recordId'] === undefined) return false;
    if (!('startTime' in value) || value['startTime'] === undefined) return false;
    return true;
}

export function AppRunDtoFromJSON(json: any): AppRunDto {
    return AppRunDtoFromJSONTyped(json, false);
}

export function AppRunDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppRunDto {
    if (json == null) {
        return json;
    }
    return {
        
        'appId': json['app_id'],
        'appVersion': json['app_version'],
        'creationTime': (new Date(json['creation_time'])),
        'data': json['data'],
        'exceptionEnd': json['exception_end'],
        'id': json['id'],
        'recordId': json['record_id'],
        'runElapsed': json['run_elapsed'] == null ? undefined : json['run_elapsed'],
        'startTime': (new Date(json['start_time'])),
        'stopRecordId': json['stop_record_id'] == null ? undefined : json['stop_record_id'],
        'stopTime': json['stop_time'] == null ? undefined : (new Date(json['stop_time'])),
    };
}

  export function AppRunDtoToJSON(json: any): AppRunDto {
      return AppRunDtoToJSONTyped(json, false);
  }

  export function AppRunDtoToJSONTyped(value?: AppRunDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'app_id': value['appId'],
        'app_version': value['appVersion'],
        'creation_time': ((value['creationTime']).toISOString()),
        'data': value['data'],
        'exception_end': value['exceptionEnd'],
        'id': value['id'],
        'record_id': value['recordId'],
        'run_elapsed': value['runElapsed'],
        'start_time': ((value['startTime']).toISOString()),
        'stop_record_id': value['stopRecordId'],
        'stop_time': value['stopTime'] == null ? undefined : ((value['stopTime'] as any).toISOString()),
    };
}

