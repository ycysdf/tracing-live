/* tslint:disable */
/* eslint-disable */
/**
 * tracing-lv-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AppNodeRunDto } from './AppNodeRunDto';
import {
    AppNodeRunDtoFromJSON,
    AppNodeRunDtoFromJSONTyped,
    AppNodeRunDtoToJSON,
    AppNodeRunDtoToJSONTyped,
} from './AppNodeRunDto';
import type { AppLatestInfoDto } from './AppLatestInfoDto';
import {
    AppLatestInfoDtoFromJSON,
    AppLatestInfoDtoFromJSONTyped,
    AppLatestInfoDtoToJSON,
    AppLatestInfoDtoToJSONTyped,
} from './AppLatestInfoDto';

/**
 * 
 * @export
 * @interface NodesPageDto
 */
export interface NodesPageDto {
    /**
     * 
     * @type {Array<AppLatestInfoDto>}
     * @memberof NodesPageDto
     */
    apps: Array<AppLatestInfoDto>;
    /**
     * 
     * @type {Date}
     * @memberof NodesPageDto
     */
    date: Date;
    /**
     * 
     * @type {Array<AppNodeRunDto>}
     * @memberof NodesPageDto
     */
    nodes: Array<AppNodeRunDto>;
}

/**
 * Check if a given object implements the NodesPageDto interface.
 */
export function instanceOfNodesPageDto(value: object): value is NodesPageDto {
    if (!('apps' in value) || value['apps'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('nodes' in value) || value['nodes'] === undefined) return false;
    return true;
}

export function NodesPageDtoFromJSON(json: any): NodesPageDto {
    return NodesPageDtoFromJSONTyped(json, false);
}

export function NodesPageDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): NodesPageDto {
    if (json == null) {
        return json;
    }
    return {
        
        'apps': ((json['apps'] as Array<any>).map(AppLatestInfoDtoFromJSON)),
        'date': (new Date(json['date'])),
        'nodes': ((json['nodes'] as Array<any>).map(AppNodeRunDtoFromJSON)),
    };
}

  export function NodesPageDtoToJSON(json: any): NodesPageDto {
      return NodesPageDtoToJSONTyped(json, false);
  }

  export function NodesPageDtoToJSONTyped(value?: NodesPageDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'apps': ((value['apps'] as Array<any>).map(AppLatestInfoDtoToJSON)),
        'date': ((value['date']).toISOString()),
        'nodes': ((value['nodes'] as Array<any>).map(AppNodeRunDtoToJSON)),
    };
}

